# Import the command handler to be able to use it
from src.commands import CommandHandler

# All available commands with the command handler when using execute_commands
# reorder_database
# import_database
# export_database
# prepare_translation
# read_activities
# read_activity_to_aka
# read_activity_to_parent
# read_all
# read_blogs
# read_books
# read_event_to_aka
# read_event_to_parent
# read_events
# read_location_to_activity
# read_location_to_aka
# read_locations
# read_note_to_item
# read_note_to_source
# read_notes
# read_people_to_activity
# read_people_to_aka
# read_people_to_location
# read_people_to_parent
# read_peoples
# read_sources
# read_special_to_activity
# read_specials
# read_types
# write_activities
# write_activity_to_aka
# write_activity_to_parent
# write_all
# write_blogs
# write_books
# write_event_to_aka
# write_event_to_parent
# write_events
# write_location_to_activity
# write_location_to_aka
# write_locations
# write_note_to_item
# write_note_to_source
# write_notes
# write_people_to_activity
# write_people_to_aka
# write_people_to_location
# write_people_to_parent
# write_peoples
# write_sources
# write_special_to_activity
# write_specials
# write_types

# Create a command handler from the CommandHandler class with the desired language as the only parameter. # You'll need a seperate command handler for every language you want to work with. 
CH_en = CommandHandler("EN")
CH_nl = CommandHandler("NL")

# With the command handler you can call execute_commands with a list of the commands you want to run. 
# Some commands are only available for the default language, while for a few other commands the language does not matter. 
# Most commands however are affected by the language of the command handler.
CH_en.execute_commands([
    CH_en.read_all
])

CH_nl.execute_commands([
    CH_nl.read_all
])

CH_en.execute_commands([
    CH_en.write_all
])

CH_nl.execute_commands([
    CH_nl.write_all
])
